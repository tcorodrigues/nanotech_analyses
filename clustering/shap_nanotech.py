# -*- coding: utf-8 -*-
"""SHAP_NanoTech.ipynb

Automatically generated by Colaboratory.

"""

!pip install shap

from google.colab import files
uploaded = files.upload()

import numpy as np
import pandas as pd

data = pd.read_csv('/content/pubs.txt', sep='\t')
data2 = data.iloc[:-1,1:] #Remove names of countries and "world"

df = data2['2001'] - data2['2000']
df2 = pd.DataFrame(df, columns=['diff1'])
df2['diff2'] = data2['2002'] - data2['2001']
df2['diff3'] = data2['2003'] - data2['2002']
df2['diff4'] = data2['2004'] - data2['2003']
df2['diff5'] = data2['2005'] - data2['2004']
df2['diff6'] = data2['2006'] - data2['2005']
df2['diff7'] = data2['2007'] - data2['2006']
df2['diff8'] = data2['2008'] - data2['2007']
df2['diff9'] = data2['2009'] - data2['2008']
df2['diff10'] = data2['2010'] - data2['2009']
df2['diff11'] = data2['2011'] - data2['2010']
df2['diff12'] = data2['2012'] - data2['2011']
df2['diff13'] = data2['2013'] - data2['2012']
df2['diff14'] = data2['2014'] - data2['2013']
df2['diff15'] = data2['2015'] - data2['2014']
df2['diff16'] = data2['2016'] - data2['2015']
df2['diff17'] = data2['2017'] - data2['2016']
df2['diff18'] = data2['2018'] - data2['2017']
df2['diff19'] = data2['2019'] - data2['2018']

from sklearn.preprocessing import MinMaxScaler
data3 = MinMaxScaler().fit_transform(df2)

from sklearn.ensemble import RandomForestClassifier
rf = RandomForestClassifier(n_estimators=100, random_state=1)
y = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1,
       0, 1, 1, 1, 0, 3, 1, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0,
       3, 2, 0, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 0, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
rf_fit = rf.fit(data3, y)

import shap
labels = list(df2.keys())

explainer = shap.TreeExplainer(rf)

shap_values = explainer.shap_values(data3)

len(shap_values[0])



shap.initjs()
import matplotlib.pyplot as plt
#shap.force_plot(explainer.expected_value[1], shap_values[1], data3) #change number according to class 0, 1, 2 or 3
X_explain = pd.DataFrame(data3)
shap.force_plot(explainer.expected_value[1], shap_values[1][0,:], X_explain.iloc[3,:])

#data3[3,:]
len(shap_values[1][0,:])

import matplotlib.pyplot as plt
shap.summary_plot(shap_values, data3, show=False, feature_names=labels)

plt.tight_layout()
f = plt.gcf()
f.savefig('feat_imp_nano_cluster3.pdf', dpi=300)

from google.colab import files
files.download('feat_imp_nano_cluster3.pdf')

shap.summary_plot(shap_values[1], data3, show=False, feature_names=labels, plot_type="violin")

plt.tight_layout()
f = plt.gcf()
f.savefig('shap_class2_nano.pdf', dpi=300)

from google.colab import files
files.download('shap_class2_nano.pdf')




